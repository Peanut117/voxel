validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].newLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x40000000004 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x40000000004) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].oldLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x40000000004 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].newLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x50000000005 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x50000000005) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].oldLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x50000000005 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].newLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x60000000006 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x60000000006) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].oldLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x60000000006 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkQueueSubmit2(): pSubmits[0].pSignalSemaphoreInfos[0].semaphore (VkSemaphore 0x110000000011) is being signaled by VkQueue 0x1540b78f0, but it may still be in use by VkSwapchainKHR 0x30000000003.

Here are the last 3 acquired image indices (brackets mark the last use of VkSemaphore 0x110000000011 in a presentation operation): [0], 1, 2.
Swapchain image 0 was presented but not re-acquired, so VkSemaphore 0x110000000011 may still be in use and cannot be safely reused with image index 2.

Vulkan insight: One solution is to assign each image its own semaphore.
Here are common methods to ensure that a semaphore passed to vkQueuePresentKHR is not in use and can be safely reused:
	a) Use a separate semaphore per swapchain image. Index these semaphores using the index of the acquired image.
	b) Consider the VK_EXT_swapchain_maintenance1 extension. It allows using a VkFence with the presentation operation.
The Vulkan spec states: The semaphore member of any binary semaphore element of the pSignalSemaphoreInfos member of any element of pSubmits must be unsignaled when the semaphore signal operation it defines is executed on the device (https://docs.vulkan.org/spec/latest/chapters/cmdbuffers.html#VUID-vkQueueSubmit2-semaphore-03868)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].newLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x40000000004 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x40000000004) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].oldLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x40000000004 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkQueueSubmit2(): pSubmits[0].pSignalSemaphoreInfos[0].semaphore (VkSemaphore 0x140000000014) is being signaled by VkQueue 0x1540b78f0, but it may still be in use by VkSwapchainKHR 0x30000000003.

Here are the last 4 acquired image indices (brackets mark the last use of VkSemaphore 0x140000000014 in a presentation operation): 0, [1], 2, 0.
Swapchain image 1 was presented but not re-acquired, so VkSemaphore 0x140000000014 may still be in use and cannot be safely reused with image index 0.

Vulkan insight: One solution is to assign each image its own semaphore.
Here are common methods to ensure that a semaphore passed to vkQueuePresentKHR is not in use and can be safely reused:
	a) Use a separate semaphore per swapchain image. Index these semaphores using the index of the acquired image.
	b) Consider the VK_EXT_swapchain_maintenance1 extension. It allows using a VkFence with the presentation operation.
The Vulkan spec states: The semaphore member of any binary semaphore element of the pSignalSemaphoreInfos member of any element of pSubmits must be unsignaled when the semaphore signal operation it defines is executed on the device (https://docs.vulkan.org/spec/latest/chapters/cmdbuffers.html#VUID-vkQueueSubmit2-semaphore-03868)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].newLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x50000000005 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x50000000005) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdPipelineBarrier2(): pDependencyInfo->pImageMemoryBarriers[0].oldLayout (VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL) is not compatible with VkImage 0x50000000005 usage flags VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT.
The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, and oldLayout or newLayout is VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL then image must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT (https://docs.vulkan.org/spec/latest/chapters/synchronization.html#VUID-VkImageMemoryBarrier2-oldLayout-01213)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x60000000006) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x40000000004) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x50000000005) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x60000000006) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkCmdBlitImage2(): pBlitImageInfo->dstImage (VkImage 0x40000000004) was created with VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT but requires VK_IMAGE_USAGE_TRANSFER_DST_BIT.
The Vulkan spec states: dstImage must have been created with VK_IMAGE_USAGE_TRANSFER_DST_BIT usage flag (https://docs.vulkan.org/spec/latest/chapters/copies.html#VUID-VkBlitImageInfo2-dstImage-00224)

validation layer ERROR:
vkDestroyDevice(): Object Tracking - For VkDevice 0x1540b6200, VkImage 0xa000000000a has not been destroyed.
The Vulkan spec states: All child objects created on device must have been destroyed prior to destroying device (https://docs.vulkan.org/spec/latest/chapters/devsandqueues.html#VUID-vkDestroyDevice-device-05137)

validation layer ERROR:
vkDestroyDevice(): Object Tracking - For VkDevice 0x1540b6200, VkDeviceMemory 0xb000000000b has not been destroyed.
The Vulkan spec states: All child objects created on device must have been destroyed prior to destroying device (https://docs.vulkan.org/spec/latest/chapters/devsandqueues.html#VUID-vkDestroyDevice-device-05137)

validation layer ERROR:
vkDestroyDevice(): Object Tracking - For VkDevice 0x1540b6200, VkImageView 0xc000000000c has not been destroyed.
The Vulkan spec states: All child objects created on device must have been destroyed prior to destroying device (https://docs.vulkan.org/spec/latest/chapters/devsandqueues.html#VUID-vkDestroyDevice-device-05137)

